{
  "Comment": "Triggers off of sqs events releated to s3 Inventory. Creates reconciliation reports between s3 and Orca catalog.",
  "StartAt": "GetCurrentArchiveList",
  "States": {
    "GetCurrentArchiveList": {
      "Parameters": {
        "event.$": "$",
        "task_config": {
        }
      },
      "Type": "Task",
      "Resource": "${orca_lambda_get_current_archive_list_arn}",
      "Retry": [
        {
          "ErrorEquals": [
            "Lambda.ServiceException",
            "Lambda.AWSLambdaException",
            "Lambda.SdkClientException"
          ],
          "IntervalSeconds": 2,
          "MaxAttempts": 3,
          "BackoffRate": 2
        }
      ],
      "Catch": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "ResultPath": "$.exception",
          "Next": "WorkflowFailed"
        }
      ],
      "Next": "PerformOrcaReconcile"
    },
    "PerformOrcaReconcile": {
      "Parameters": {
        "event.$": "$",
        "task_config": {
        }
      },
      "Type": "Task",
      "Resource": "${orca_lambda_perform_orca_reconcile_arn}",
      "Retry": [
        {
          "ErrorEquals": [
            "Lambda.ServiceException",
            "Lambda.AWSLambdaException",
            "Lambda.SdkClientException"
          ],
          "IntervalSeconds": 2,
          "MaxAttempts": 3,
          "BackoffRate": 2
        }
      ],
      "Catch": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "ResultPath": "$.exception",
          "Next": "WorkflowFailed"
        }
      ],
      "Next": "WorkflowSucceeded"
    },
    "WorkflowFailed": {
      "Type": "Fail",
      "Cause": "Workflow failed"
    },
    "WorkflowSucceeded": {
      "Type": "Succeed"
    }
  }
}